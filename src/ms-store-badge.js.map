{"version":3,"file":"ms-store-badge.js","sourceRoot":"","sources":["ms-store-badge.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * <ms-store-badge> web component\r\n *\r\n * The app badge renders and iframe hosted on a domain whitelisted by Microsoft Edge so that users avoid \r\n * the browser security pop-up asking to launch another apps. Browsers other than Edge will show the\r\n * security pop-up.\r\n * \r\n * On non-Windows 10+ machines, it will simply display an href with an image to redirect to the Web PDP\r\n */\r\nclass MSStoreBadge extends HTMLElement {\r\n  /**\r\n   * The ID of your app. \r\n   */\r\n  productId: string = \"\";\r\n\r\n  /**\r\n   * Sets the size of the badge. Should be \"small\" or \"large\"\r\n   */\r\n  size: \"small\" | \"large\" = \"large\";\r\n\r\n  /**\r\n   * Sets the language. If null or omitted, the language will be auto-detected from the user's browser language.\r\n   */\r\n  language: string | null = \"\";\r\n\r\n  #languageDetails: SupportedLanguage = MSStoreBadge.englishLanguage;\r\n  #env: \"dev\" | \"prod\" = (global as any).__rollup_injected_env || \"dev\";\r\n  #iframeLocation = this.#env === \"dev\" ? \"iframe.html\" : \"https://get.microsoft.com/iframe.html\";\r\n  #imagesLocation = this.#env === \"dev\" ? \"/images\" : \"https://getbadgecdn.azureedge.net/images\";\r\n  #platformDetails: PlatformDetails = { isWindows: false, windowsVersion: null, isEdgeBrowser: false };\r\n\r\n  static englishLanguage: SupportedLanguage = { name: \"English\", code: \"en\", imageSmall: { fileName: \"English_S.png\", }, imageLarge: { fileName: \"English_L.png\" } };\r\n  static supportedLanguages = MSStoreBadge.createSupportedLanguages();\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    // Create our state.\r\n    this.getPlatformDetails().then(details => this.#platformDetails = details);\r\n    this.#languageDetails = MSStoreBadge.getSupportedLanguageFromCode(this.language);\r\n    this.language = this.#languageDetails.code;\r\n\r\n    // Create our HTML elements.\r\n    const shadow = this.attachShadow({ mode: \"open\" });\r\n    const style = this.createStyle();\r\n    const html = this.createHtml();\r\n    shadow.appendChild(style);\r\n    shadow.appendChild(html);\r\n  }\r\n\r\n  updateImageSrc() {\r\n    const img = this.shadowRoot?.querySelector(\"img\");\r\n    if (img) {\r\n      img.setAttribute(\"src\", this.getImageSource());\r\n      img.className = this.getImageClass();\r\n    }\r\n  }\r\n\r\n  // Web component lifecycle callback: component added to DOM\r\n  connectedCallback() {\r\n  }\r\n\r\n  // Web component lifecycle callback: register that we want to observe certain attributes.\r\n  static get observedAttributes(): string[] {\r\n    return [\r\n      \"productid\",\r\n      \"size\",\r\n      \"language\"\r\n    ];\r\n  }\r\n\r\n  // Web component lifecycle callback: when an observed attribute changes.\r\n  attributeChangedCallback(name: string, oldValue: any, newValue: any) {\r\n    if (name === \"size\" && (newValue === \"large\" || newValue === \"small\") && oldValue !== newValue) {\r\n      this.size = newValue;\r\n      this.updateImageSrc();\r\n    } else if (name === \"language\" && newValue !== oldValue && (typeof newValue === \"string\" || !newValue)) {\r\n      this.#languageDetails = MSStoreBadge.getSupportedLanguageFromCode(newValue);\r\n      this.language = this.#languageDetails.code;\r\n      this.updateImageSrc();\r\n    } else if (name === \"productid\" && newValue !== oldValue && typeof newValue === \"string\") {\r\n      this.productId = newValue;\r\n    }\r\n  }\r\n\r\n  createStyle(): HTMLStyleElement {\r\n    const styleString = `\r\n      :host {\r\n        display: inline-block;\r\n        cursor: pointer;\r\n        height: fit-content;\r\n      }\r\n\r\n      iframe {\r\n        border: none;\r\n        width: 0px;\r\n        height: 0px;\r\n      }\r\n\r\n      img {\r\n        width: auto;\r\n        border-radius: 8px;\r\n      }\r\n\r\n      img.small {\r\n        max-height: 52px;\r\n      }\r\n\r\n      img.large {\r\n        max-height: 104px;\r\n      }\r\n    `;\r\n\r\n    const element = document.createElement(\"style\");\r\n    element.textContent = styleString;\r\n    return element;\r\n  }\r\n\r\n  createHtml(): HTMLElement {\r\n    const container = document.createElement(\"div\");\r\n    container.appendChild(this.createImage());\r\n    container.appendChild(this.createIFrame());\r\n    return container;\r\n  }\r\n\r\n  private async getPlatformDetails(): Promise<PlatformDetails> {\r\n    // Use client hints if available.\r\n    // Typescript doesn't yet have support for typing this.\r\n    const navigatorAny = navigator as any;\r\n    if (navigatorAny.userAgentData && navigatorAny.userAgentData.getHighEntropyValues) {\r\n      try {\r\n        const platformDetails = await navigatorAny.userAgentData.getHighEntropyValues([\"platform\", \"platformVersion\"]);\r\n        const isWindows = platformDetails.platform === \"Windows\";\r\n        const version = isWindows ? parseFloat(platformDetails?.platformVersion || \"\") : null;\r\n        return {\r\n          isWindows: isWindows,\r\n          windowsVersion: version,\r\n          isEdgeBrowser: (navigatorAny.userAgentData.brands || []).some((b: any) => b.brand === \"Microsoft Edge\")\r\n        }\r\n      } catch (error) {\r\n        // Eat the error. We'll try our fallback below.\r\n      }\r\n    }\r\n\r\n    // Fallback: use navigator.userAgent\r\n    const windowsUserAgentRegex = new RegExp(/.?Windows NT (\\d+\\.?\\d?\\.?\\d?\\.?\\d?)/gi);\r\n    const matchResults = windowsUserAgentRegex.exec(navigator.userAgent);\r\n    if (matchResults && matchResults.length >= 2) {\r\n      return {\r\n        isWindows: true,\r\n        windowsVersion: parseFloat(matchResults[1]),\r\n        isEdgeBrowser: !!navigator.userAgent.match(\"Edg/\")\r\n      }\r\n    }\r\n\r\n    // Some other platform besides Windows.\r\n    return {\r\n      isWindows: false,\r\n      windowsVersion: null,\r\n      isEdgeBrowser: !!navigator.userAgent.match(\"Edg/\")\r\n    }\r\n  }\r\n\r\n  private static getSupportedLanguageFromCode(languageCode: string | null | undefined): SupportedLanguage {\r\n    // If language code isn't set, auto-detect\r\n    if (!languageCode) {\r\n      return MSStoreBadge.getSupportedLanguageFromUserAgent();\r\n    }\r\n\r\n    // See if the language code is a supported language.\r\n    const supportedLanguage = MSStoreBadge.supportedLanguages.find(l => l.code === languageCode.toLowerCase());\r\n    if (supportedLanguage) {\r\n      return supportedLanguage;\r\n    }\r\n\r\n    // Language code is unsupported. Fallback to English.\r\n    return MSStoreBadge.englishLanguage;\r\n  }\r\n\r\n  static getSupportedLanguageFromUserAgent(): SupportedLanguage {\r\n    // Is the navigator language one of our supported languages? If so, use that.\r\n    const navigatorLanguage = MSStoreBadge.supportedLanguages.find(l => l.name === navigator.language);\r\n    if (navigatorLanguage) {\r\n      return navigatorLanguage;\r\n    }\r\n\r\n    // No dice on the navigator language.\r\n    // See if any of the navigator languages are supported.\r\n    if (navigator.languages) {\r\n      var match = navigator.languages\r\n        .map(lang => MSStoreBadge.supportedLanguages.find(l => l.code === lang))\r\n        .find(l => !!l);\r\n      if (match) {\r\n        return match;\r\n      }\r\n    }\r\n\r\n    // Couldn't find any language support.\r\n    // See if we have the language string (\"en\") rather than language-culture string (\"en-us\")\r\n    const dashIndex = navigator.language.indexOf(\"-\");\r\n    if (dashIndex > 0) {\r\n      const languageOnly = navigator.language.substring(0, dashIndex);\r\n      const supportedLanguage = MSStoreBadge.supportedLanguages.find(l => l.name === languageOnly);\r\n      if (supportedLanguage) {\r\n        return supportedLanguage;\r\n      }\r\n    }\r\n\r\n    // All else fails, go to English\r\n    return MSStoreBadge.englishLanguage;\r\n  }\r\n\r\n  createIFrame(): HTMLIFrameElement {\r\n    const iframe = document.createElement(\"iframe\");\r\n    iframe.setAttribute(\"loading\", \"eager\");\r\n    iframe.title = \"Microsoft Store App Badge\";\r\n    iframe.src = this.#iframeLocation;\r\n    return iframe;\r\n  }\r\n\r\n  createImage(): HTMLImageElement {\r\n    const image = document.createElement(\"img\");\r\n    image.setAttribute(\"part\", \"img\");\r\n    image.src = this.getImageSource();\r\n    image.className = this.getImageClass();\r\n    image.alt = \"Microsoft Store app badge\";\r\n    image.addEventListener(\"click\", (e: MouseEvent) => this.launchApp(e));\r\n    return image;\r\n  }\r\n\r\n  getImageSource(): string {\r\n    const fileName = this.size === \"large\" ?\r\n      this.#languageDetails.imageLarge.fileName :\r\n      this.#languageDetails.imageSmall.fileName;\r\n    return `${this.#imagesLocation}/${fileName}`;\r\n  }\r\n\r\n  getImageClass(): string {\r\n    return this.size === \"large\" ? \"large\" : \"small\";\r\n  }\r\n\r\n  launchApp(e: MouseEvent) {\r\n    if (!this.productId) {\r\n      return;\r\n    }\r\n\r\n    if (this.#platformDetails.isWindows && this.#platformDetails.isEdgeBrowser) {\r\n      // Are we on Edge on Windows? Launch the mini PDP via the iframe hosted on Edge's whitelisted domain.\r\n      this.launchStoreAppPdpViaWhitelistedDomain();\r\n    } else if (this.#platformDetails.isWindows) {\r\n      // We're on some other browser on Windows. Launch via ms-store-app:// protocol.\r\n      this.launchStoreAppPdp();\r\n    } else {\r\n      // We're not on Windows so we can't launch the app. Navigate to the web PDP.\r\n      this.launchStoreWebPdp(e);\r\n    }\r\n  }\r\n\r\n  launchStoreAppPdp() {\r\n    const appLaunchUrl = \"ms-windows-store://pdp/\" +\r\n      \"?productid=\" + this.productId +\r\n      \"&mode=mini&pos=\" + Math.floor(window.screenLeft * window.devicePixelRatio) +\r\n      \",\" + Math.floor(window.screenTop * window.devicePixelRatio) +\r\n      \",\" + Math.floor(window.outerWidth * window.devicePixelRatio) +\r\n      \",\" + Math.floor(window.outerHeight * window.devicePixelRatio);\r\n    location.href = appLaunchUrl;\r\n  }\r\n\r\n  launchStoreAppPdpViaWhitelistedDomain() {\r\n    const iframe = this.shadowRoot?.querySelector(\"iframe\");\r\n    if (iframe) {\r\n      const args = {\r\n        message: \"launch\",\r\n        productId: this.productId\r\n      };\r\n      iframe.contentWindow?.postMessage(args, \"*\");\r\n    }\r\n  }\r\n\r\n  launchStoreWebPdp(e: MouseEvent) {\r\n    const url = `https://apps.microsoft.com/store/detail/${this.productId}`;\r\n    if (e.ctrlKey) {\r\n      window.open(url, \"_blank\");\r\n    } else {\r\n      window.location.href = url;\r\n    }\r\n  }\r\n\r\n  static createSupportedLanguages(): SupportedLanguage[] {\r\n    return [\r\n      { name: \"Arabic\", code: \"ar\", imageSmall: { fileName: \"Arabic_S.png\" }, imageLarge: { fileName: \"Arabic_L.png\" } },\r\n      { name: \"Bosnian\", code: \"be\", imageSmall: { fileName: \"Bosnian_S.png\" }, imageLarge: { fileName: \"Bosnian_L.png\" } },\r\n      { name: \"Bengali\", code: \"bn\", imageSmall: { fileName: \"Bengali_S.png\" }, imageLarge: { fileName: \"Bengali_L.png\" } },\r\n      { name: \"Bosnian\", code: \"bs\", imageSmall: { fileName: \"Bosnian_S.png\" }, imageLarge: { fileName: \"Bosnian_L.png\" } },\r\n      { name: \"Bulgarian\", code: \"bg\", imageSmall: { fileName: \"Bulgarian_S.png\" }, imageLarge: { fileName: \"Bulgarian_L.png\" } },\r\n      { name: \"Chinese (Simplified)\", code: \"zh-cn\", imageSmall: { fileName: \"Chinese_Simplified_S.png\" }, imageLarge: { fileName: \"Chinese_Simplified_L.png\" } },\r\n      { name: \"Chinese (Traditional)\", code: \"zh-tw\", imageSmall: { fileName: \"Chinese_Traditional_S.png\" }, imageLarge: { fileName: \"Chinese_Traditional_L.png\" } },\r\n      { name: \"Croatian\", code: \"hr\", imageSmall: { fileName: \"Croatian_S.png\" }, imageLarge: { fileName: \"Croatian_L.png\" } },\r\n      { name: \"Czech\", code: \"cs\", imageSmall: { fileName: \"Czech_S.png\" }, imageLarge: { fileName: \"Czech_L.png\" } },\r\n      { name: \"Danish\", code: \"da\", imageSmall: { fileName: \"Danish_S.png\" }, imageLarge: { fileName: \"Danish_L.png\" } },\r\n      { name: \"Dutch\", code: \"nl\", imageSmall: { fileName: \"Dutch_S.png\" }, imageLarge: { fileName: \"Dutch_L.png\" } },\r\n      MSStoreBadge.englishLanguage,\r\n      { name: \"Estonian\", code: \"et\", imageSmall: { fileName: \"Estonian_S.png\" }, imageLarge: { fileName: \"Estonian_L.png\" } },\r\n      { name: \"Filipino\", code: \"fil\", imageSmall: { fileName: \"Filipino_S.png\" }, imageLarge: { fileName: \"Filipino_L.png\" } },\r\n      { name: \"Finnish\", code: \"fi\", imageSmall: { fileName: \"Finnish_S.png\" }, imageLarge: { fileName: \"Finnish_L.png\" } },\r\n      { name: \"French\", code: \"fr\", imageSmall: { fileName: \"French_S.png\" }, imageLarge: { fileName: \"French_L.png\" } },\r\n      { name: \"German\", code: \"de\", imageSmall: { fileName: \"German_S.png\" }, imageLarge: { fileName: \"German_L.png\" } },\r\n      { name: \"Greek\", code: \"el\", imageSmall: { fileName: \"Greek_S.png\" }, imageLarge: { fileName: \"Greek_L.png\" } },\r\n      { name: \"Hebrew\", code: \"he\", imageSmall: { fileName: \"Hebrew_S.png\" }, imageLarge: { fileName: \"Hebrew_L.png\" } },\r\n      { name: \"Hindi\", code: \"hi\", imageSmall: { fileName: \"Hindi_S.png\" }, imageLarge: { fileName: \"Hindi_L.png\" } },\r\n      { name: \"Hungarian\", code: \"hu\", imageSmall: { fileName: \"Hungarian_S.png\" }, imageLarge: { fileName: \"Hungarian_L.png\" } },\r\n      { name: \"Indonesian\", code: \"id\", imageSmall: { fileName: \"Indonesian_S.png\" }, imageLarge: { fileName: \"Indonesian_L.png\" } },\r\n      { name: \"Italian\", code: \"it\", imageSmall: { fileName: \"Italian_S.png\" }, imageLarge: { fileName: \"Italian_L.png\" } },\r\n      { name: \"Japanese\", code: \"ja\", imageSmall: { fileName: \"Japanese_S.png\" }, imageLarge: { fileName: \"Japanese_L.png\" } },\r\n      { name: \"Korean\", code: \"ko\", imageSmall: { fileName: \"Korean_S.png\" }, imageLarge: { fileName: \"Korean_L.png\" } },\r\n      { name: \"Latvian\", code: \"lv\", imageSmall: { fileName: \"Latvian_S.png\" }, imageLarge: { fileName: \"Latvian_L.png\" } },\r\n      { name: \"Lithuanian\", code: \"lt\", imageSmall: { fileName: \"Lithuanian_S.png\" }, imageLarge: { fileName: \"Lithuanian_L.png\" } },\r\n      { name: \"Malay\", code: \"ms\", imageSmall: { fileName: \"Malay_S.png\" }, imageLarge: { fileName: \"Malay_L.png\" } },\r\n      { name: \"Norwegian\", code: \"no\", imageSmall: { fileName: \"Norwegian_S.png\" }, imageLarge: { fileName: \"Norwegian_L.png\" } },\r\n      { name: \"Polish\", code: \"pl\", imageSmall: { fileName: \"Polish_S.png\" }, imageLarge: { fileName: \"Polish_L.png\" } },\r\n      { name: \"Portuguese (Brazil)\", code: \"pt-br\", imageSmall: { fileName: \"Portuguese_Brazil_S.png\" }, imageLarge: { fileName: \"Portuguese_Brazil_L.png\" } },\r\n      { name: \"Portuguese (Portugal)\", code: \"pt\", imageSmall: { fileName: \"Portuguese_Portugal_S.png\" }, imageLarge: { fileName: \"Portuguese_Portugal_L.png\" } },\r\n      { name: \"Romanian\", code: \"ro\", imageSmall: { fileName: \"Romanian_S.png\", }, imageLarge: { fileName: \"Romanian_L.png\" } },\r\n      { name: \"Russian\", code: \"ru\", imageSmall: { fileName: \"Russian_S.png\" }, imageLarge: { fileName: \"Russian_L.png\" } },\r\n      { name: \"Serbian\", code: \"sr\", imageSmall: { fileName: \"Serbian_S.png\" }, imageLarge: { fileName: \"Serbian_L.png\" } },\r\n      { name: \"Slovak\", code: \"sk\", imageSmall: { fileName: \"Slovak_S.png\" }, imageLarge: { fileName: \"Slovak_L.png\" } },\r\n      { name: \"Slovenian\", code: \"sl\", imageSmall: { fileName: \"Slovenian_S.png\" }, imageLarge: { fileName: \"Slovenian_L.png\" } },\r\n      { name: \"Spanish\", code: \"es\", imageSmall: { fileName: \"Spanish_S.png\" }, imageLarge: { fileName: \"Spanish_L.png\" } },\r\n      { name: \"Swahili\", code: \"sw\", imageSmall: { fileName: \"Swahili_S.png\" }, imageLarge: { fileName: \"Swahili_L.png\" } },\r\n      { name: \"Swedish\", code: \"sv\", imageSmall: { fileName: \"Swedish_S.png\" }, imageLarge: { fileName: \"Swedish_L.png\" } },\r\n      { name: \"Thai\", code: \"th\", imageSmall: { fileName: \"Thai_S.png\" }, imageLarge: { fileName: \"Thai_L.png\" } },\r\n      { name: \"Turkish\", code: \"tr\", imageSmall: { fileName: \"Turkish_S.png\" }, imageLarge: { fileName: \"Turkish_L.png\" } },\r\n      { name: \"Ukranian\", code: \"uk\", imageSmall: { fileName: \"Ukranian_S.png\" }, imageLarge: { fileName: \"Ukranian_L.png\" } },\r\n      { name: \"Vietnamese\", code: \"vi\", imageSmall: { fileName: \"Vietnamese_S.png\" }, imageLarge: { fileName: \"Vietnamese_L.png\" } }\r\n    ];\r\n  }\r\n}\r\n\r\ninterface SupportedLanguage {\r\n  name: string;\r\n  imageSmall: SupportedLanguageImage;\r\n  imageLarge: SupportedLanguageImage;\r\n  code: string;\r\n}\r\n\r\ninterface SupportedLanguageImage {\r\n  fileName: string;\r\n}\r\n\r\ninterface PlatformDetails {\r\n  isWindows: boolean;\r\n  windowsVersion: number | null;\r\n  isEdgeBrowser: boolean;\r\n}\r\n\r\ncustomElements.define(\"ms-store-badge\", MSStoreBadge);"]}