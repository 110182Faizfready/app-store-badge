{"version":3,"file":"ms-store-badge.js","sourceRoot":"","sources":["src/ms-store-badge.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html, css } from 'lit';\r\nimport { customElement, property, state } from 'lit/decorators.js';\r\n\r\n/**\r\n * <ms-store-badge> web component\r\n *\r\n * Will try to use the Store App protocol to launch the mini PDP on Windows 10+ via an iframe\r\n * hosted on a default allowed domain by Edge. It will generate a small security pop-up on Chrome \r\n * and will work without security pop-up in Firefox\r\n * \r\n * On non-Windows 10+ machines, it will simply display a href with an image to redirect to the Web PDP\r\n */\r\n@customElement('ms-store-badge')\r\nexport class MSStoreBadge extends LitElement {\r\n  static styles = css`\r\n    :host {\r\n      display: block;\r\n      padding: 0;\r\n      margin: 0;\r\n    }\r\n\r\n    iframe {\r\n      border:none;\r\n    }\r\n\r\n    .iframeBig {\r\n      width:284px;\r\n      height:108px\r\n    }\r\n\r\n    .iframeSmall {\r\n      width:127px;\r\n      height:57px\r\n    }\r\n\r\n    .largeBadge {\r\n       width: 284px; height: 104px;\r\n        }\r\n\r\n    .smallBadge {\r\n        width: 127px; height: 52px;\r\n    }\r\n  `;\r\n\r\n  /**\r\n   * product Id of the Microsoft Store App provided in the Partner Center portal.\r\n   */\r\n  @property({ type: String }) productId = '';\r\n\r\n  /**\r\n   * language to use for the badge image (en, fr, zh, etc.)\r\n   * if not set, the component will auto detect the browser preferred language \r\n   */\r\n  @property({ type: String }) language = '';\r\n\r\n  /**\r\n   * Sets the size of the badge. Should be \"small\" or \"large\"\r\n   */\r\n  @property({ type: String }) size: \"small\" | \"large\" = \"large\";\r\n\r\n  @state()\r\n  protected largeBadgeUrl = \"https://developer.microsoft.com/store/badges/images/English_get-it-from-MS.png\";\r\n\r\n  @state()\r\n  protected smallBadgeUrl = \"https://developer.microsoft.com/store/badges/images/English_get_L.png\";\r\n\r\n  @state()\r\n  protected iframeLocation = \"https://david.blob.core.windows.net/tests/minipdp/iframe.html\";\r\n\r\n  private static languageImageSuffixMap = {\r\n    \"ar\": \"Arabic\",\r\n    \"be\": \"Bosnian\",\r\n    \"bn\": \"Bengali\",\r\n    \"bs\": \"Bosnian\",\r\n    \"bg\": \"Bulgarian\",\r\n    \"zh\": \"Chinese_Simplified\",\r\n    \"hr\": \"Croatian\",\r\n    \"cs\": \"Czech\",\r\n    \"da\": \"Danish\",\r\n    \"nl\": \"Dutch\",\r\n    \"en\": \"English\",\r\n    \"et\": \"Estonian\",\r\n    \"fil\": \"Filipino\",\r\n    \"fi\": \"Finnish\",\r\n    \"fr\": \"French\",\r\n    \"de\": \"German\",\r\n    \"el\": \"Greek\",\r\n    \"he\": \"Hebrew\",\r\n    \"hi\": \"Hindi\",\r\n    \"hu\": \"Hungarian\",\r\n    \"id\": \"Indonesian\",\r\n    \"it\": \"Italian\",\r\n    \"ja\": \"Japanese\",\r\n    \"ko\": \"Korean\",\r\n    \"lv\": \"Latvian\",\r\n    \"lt\": \"Lithuanian\",\r\n    \"ms\": \"Malay\",\r\n    \"no\": \"Norwegian\",\r\n    \"pl\": \"Polish\",\r\n    \"pt\": \"Portuguese-Portugal\",\r\n    \"pt-pt\": \"Portuguese-Portugal\",\r\n    \"pt-br\": \"Portuguese-Brazilian\",\r\n    \"ro\": \"Romanian\",\r\n    \"ru\": \"Russian\",\r\n    \"sr\": \"Serbian\",\r\n    \"sk\": \"Slovak\",\r\n    \"sl\": \"Slovenian\",\r\n    \"es\": \"Spanish\",\r\n    \"sw\": \"Swahili\",\r\n    \"sv\": \"Swedish\",\r\n    \"th\": \"Thai\",\r\n    \"tr\": \"Turkish\",\r\n    \"uk\": \"Ukranian\",\r\n    \"vi\": \"Vietnamese\"\r\n  };\r\n\r\n  /**\r\n   * Will contain the right url to the Web PDP or Store App protocol using the product ID\r\n  */\r\n  @state()\r\n  protected hrefValue = '';\r\n\r\n  /**\r\n   * Trying to trigger miniPDP only on Windows 10+\r\n  */\r\n  @state()\r\n  protected miniPDPcompatible = false;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  firstUpdated() {\r\n    this._checkLanguage();\r\n    this._checkPlatform();\r\n  }\r\n\r\n  updated() {\r\n    this._checkLanguage();\r\n  }\r\n\r\n  private _checkPlatform() {\r\n    // If the OS is Windows 10 or Windows 11 \r\n    if (navigator.userAgent.indexOf(\"Windows NT 1\") !== -1) {\r\n      this.hrefValue = `ms-windows-store://pdp/?ProductId=${this.productId}`;\r\n      this.miniPDPcompatible = true;\r\n    }\r\n    // otherwise, redirect to the Web PDP\r\n    else {\r\n      this.hrefValue = `https://www.microsoft.com/store/apps/${this.productId}?cid=storebadge&ocid=badge`\r\n    }\r\n  }\r\n\r\n  private _checkLanguage() {\r\n    let dashPosition;\r\n\r\n    if (this.language === '') {\r\n      dashPosition = navigator.language.indexOf(\"-\");\r\n      /* 'en-us', 'fr-fr', 'fil-ph' */\r\n      if (dashPosition !== -1) {\r\n        this.language = navigator.language.substring(0, dashPosition);\r\n      }\r\n      /* 'en', 'fr' */\r\n      else {\r\n        this.language = navigator.language;\r\n      }\r\n    }\r\n\r\n    // Set the large image URL and small image URL based on the language.\r\n    // Special case for Portuguese: we need to check if it's Portugal or Brazil variation.\r\n    const language = navigator.language.toLowerCase() === \"pt-br\" ?\r\n      \"pt-br\" :\r\n      this.language;\r\n    this.largeBadgeUrl = MSStoreBadge.getBadgeUrl(language, \"large\");\r\n    this.smallBadgeUrl = MSStoreBadge.getBadgeUrl(language, \"small\");\r\n  }\r\n\r\n  static getBadgeUrl(language: string, size: \"small\" | \"large\") {\r\n    // Special handling if it's small pt-br\r\n    const langSuffix = language === \"pt-br\" && size === \"small\" ? \"Portuguese_Brazil\" :\r\n      (this.languageImageSuffixMap as any)[language] || // Grab the image suffix from the map\r\n      \"English\"; // Couldn't find anything? Use English\r\n\r\n    const sizeSuffix = size === \"small\" ? \"get_L.png\" : \"get-it-from-MS.png\";\r\n    return `https://developer.microsoft.com/store/badges/images/${langSuffix}_${sizeSuffix}`;\r\n  }\r\n\r\n  render() {\r\n    let badge;\r\n    let iframe;\r\n\r\n    if (this.size === \"large\") {\r\n      badge = html`<img src=\"${this.largeBadgeUrl}\" alt=\"Microsoft Store badge logo\" class=\"largeBadge\" />`;\r\n      iframe = html`<iframe\r\n  src='${this.iframeLocation}?productId=${this.productId}&amp;language=${this.language}&amp;badgeSize=big&amp;imgUrl=${this.largeBadgeUrl}&amp;targetUrl=${this.hrefValue}'\r\n  class=\"iframeBig\"></iframe>`;\r\n    }\r\n    else {\r\n      badge = html`<img src=\"${this.smallBadgeUrl}\" alt=\"Microsoft Store badge logo\" class=\"smallBadge\" />`;\r\n      iframe = html`<iframe\r\n  src='${this.iframeLocation}?productId=${this.productId}&amp;language=${this.language}&amp;imgUrl=${this.smallBadgeUrl}&amp;targetUrl=${this.hrefValue}'\r\n  class=\"iframeSmall\"></iframe>`;\r\n    }\r\n\r\n    return this.miniPDPcompatible ?\r\n      html`${iframe}` :\r\n      html`<a href=\"${this.hrefValue}\" target=\"_blank\">${badge}</a>`;\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'ms-store-badge': MSStoreBadge;\r\n  }\r\n}\r\n"]}